name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x, 18.x, 20.x]
        include:
          - os: windows-latest
            node-version: 20.x

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and prepare
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - name: ESLint
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        run: pnpm lint
      - name: TSLint
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        run: pnpm turbo run test:dts
      - name: Tests
        run: pnpm turbo run test
